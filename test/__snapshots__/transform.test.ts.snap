// Vitest Snapshot v1

exports[`transform > comments.ts 1`] = `
"/* import { ref } from 'vue' */
// import { computed } from 'vue'


import { ref, computed } from 'vue';
const a = {
  rel: \\"noreferrer\\",
  href: \\"https://github.com/antfu/vitesse\\",
  target: \\"_blank\\"
}

const foo = ref(0)
const bar = computed(() => {})

const b = { class: \\"text-sm opacity-75\\" };
// reactive
"
`;

exports[`transform > custom.js 1`] = `
"import customDefault from 'custom';
import customDefaultAlias from 'custom';
import { customNamed } from 'custom';
const a = customDefault(customNamed())
const a = customDefaultAlias()
"
`;

exports[`transform > dollar.js 1`] = `
"import { $ } from 'vue-dollar';
$('hi')
"
`;

exports[`transform > existing.jsx 1`] = `
"import ref from 'ref'
import { computed } from 'computed'


import { watch } from 'vue';
const a = ref(0)
const b = computed(0)

watch(a)
ignored(b)
"
`;

exports[`transform > existing2.jsx 1`] = `
"const { ref, computed } = Vue

const a = ref(0)
const b = computed(0)
"
`;

exports[`transform > existing3.jsx 1`] = `
"const [ ref, computed ] = Vue

const a = ref(0)
const b = computed(0)
"
`;

exports[`transform > existing4.jsx 1`] = `
"const [
  ref,
  computed
] = Vue

const a = ref(0)
const b = computed(0)
"
`;

exports[`transform > existing5.jsx 1`] = `
"import {
  ref,
  computed,
  watch as watch3,
} from 'vue'


import { watch } from 'vue';
const a = ref(0)
const b = computed(0)
const c = watch(0)
const d = watch3(0)
"
`;

exports[`transform > existing6.jsx 1`] = `
"import { computed } from 'vue';
const a = computed(() => /^(https?:\\\\/\\\\/|\\\\/\\\\/)/.test(props.to))
"
`;

exports[`transform > glob.ts 1`] = `
"import { ref } from 'vue';
const modules = import.meta.glob(\\"/src/nested/*.vue\\");
const msg = ref(\\"Global Imports\\");
"
`;

exports[`transform > import-all.ts 1`] = `
"import * as THREE from 'three.js';
const scene = new THREE.Scene();
"
`;

exports[`transform > non-target.js 1`] = `
"useNonTarget()
"
`;

exports[`transform > props.ts 1`] = `
"import { toRefs } from 'vue';
const a = z.ref(0)
console.log({
  ...toRefs(a)
})
"
`;

exports[`transform > prototype.ts 1`] = `
"const a = Object.keys(b)
const c = a.toString()

"
`;

exports[`transform > react.jsx 1`] = `
"import { useState } from 'react';
export function Component() {
  const [count, setCount] = useState()

  return <div>{ count }</div>
}
"
`;

exports[`transform > react-existing.jsx 1`] = `
"import React, { useState } from 'react';

export function Component() {
  const [count, setCount] = useState()

  return <div>{ count }</div>
}
"
`;

exports[`transform > recursive.ts 1`] = `
"export const ref = (obj: any) => {
  return ref(1)
}
"
`;

exports[`transform > resolver.ts 1`] = `
"import customResolved1 from 'custom/resolved/1';
import customResolved2 from 'custom/resolved/2';
import { _customNamedResolved2 as customNamedResolved2 } from 'custom/resolved/2';
const a = customResolved1(1)
const b = customResolved2(1)
const c = customNamedResolved2(1)
"
`;

exports[`transform > resolver-element.ts 1`] = `
"import { defineComponent } from 'vue';
export default defineComponent({
  components: {
    ElButton,
  },
  directives: {
    loading: vLoading,
  },
})

ElMessage.warning('Test')
"
`;

exports[`transform > strings.ts 1`] = `
"console.log(\\"ref(0)\\")
console.log(\`ref(\${a})\`)
console.log('ref(\\\\'z\\\\')')
console.log(\`
ref('z')
\`)
"
`;

exports[`transform > svelte.svelte 1`] = `
"import { writable } from 'svelte/store';
import { tweened } from 'svelte/motion';
import { cubicOut, quintOut } from 'svelte/easing';
import { onMount } from 'svelte';
const list = writable([1, 2, 3])
const size = tweened(1, {
  duration: 300,
  easing: cubicOut
});
onMount(() => {})

{#each $list as n (n)}
<div animate:flip={{delay: 250, duration: 250, easing: quintOut}}>
  {n}
</div>
{/each}

{#if condition}
  <div transition:fade={{amount: 10}}>
    fades in and out
  </div>
{/if}
"
`;

exports[`transform > template-literal.ts 1`] = `
"import { ref } from 'vue';
const z = \`bar-\${ref()}\`
"
`;

exports[`transform > template-ref.vue 1`] = `
"import { ref } from 'vue';
<template>
  <div ref=\\"divRef\\"></div>
</template>

<script setup>
const divRef = ref(null)
</script>
"
`;

exports[`transform > vue.js 1`] = `
"import { useQuasar, useMeta } from 'quasar';
import { ref } from 'vue';
import { defineStore, mapState } from 'pinia';
const q = useQuasar()
const meta = useMeta()
const a = ref(0)
const piniaStore = defineStore()
const piniaMapSate = mapState()
"
`;

exports[`transform-vue-macro > existing.ts 1`] = `
"import { $ } from 'vue/macros';
const not1 = /($)/.test('a'); const exist1 = $(obj); const not1 = /($)/.test('a')
"
`;

exports[`transform-vue-macro > notexisting.ts 1`] = `
"const str = '/($)/'; const test1 = /($)/.test('a')
const test2 = /[;$]/
const test3 = /($)/gim.test('a')
const test4 = /[$]/gim
const test5 = /[\\\\/$]/gim
"
`;
